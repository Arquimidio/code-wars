/*
Create a function, that accepts an arbitrary number of arrays and returns a single array generated by alternately appending elements from the passed in arguments. If one of them is shorter than the others, the result should be padded with empty elements.

Examples:

interleave([1, 2, 3], ["c", "d", "e"]) === [1, "c", 2, "d", 3, "e"]
interleave([1, 2, 3], [4, 5]) === [1, 4, 2, 5, 3, null]
interleave([1, 2, 3], [4, 5, 6], [7, 8, 9]) === [1, 4, 7, 2, 5, 8, 3, 6, 9]
interleave([]) === []
*/

function interleave(...args) {
  //Gets bigger array length in args (for index reference in the for loop)
  let maxLength = 0;
  args.forEach(arr => arr.length > maxLength? maxLength = arr.length : null);
  // Loops through the arrays, interleaving all of them in result
  const result = [];
  for(let i = 0; i < maxLength; i++){
    args.forEach(arr => arr[i] === undefined? result.push(null) : result.push(arr[i]))
  }
  return result;
}